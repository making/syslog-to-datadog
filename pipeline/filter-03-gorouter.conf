filter {
    if [source_type] == "RTR" or (![metrics_type] and [service] == "gorouter") {
        grok {
            id => "parse-gorouter"
            match => { "message" => '%{URIHOST:request_host} %{NOTSPACE} \[%{TIMESTAMP_ISO8601:access_timestamp}\] \"%{WORD:request_method} %{URIPATHPARAM:request_url} %{SYSLOGPROG:request_protocol}\" %{NUMBER:status_code:int} %{NUMBER:bytes_received:int} %{NUMBER:bytes_sent:int} \"%{NOTSPACE:referer}\" \"%{DATA:user_agent}\" \"%{URIHOST:remote_address}\" \"%{URIHOST:backend_address}\" x_forwarded_for:\"%{DATA:x_forwarded_for}\" x_forwarded_proto:\"%{DATA:x_forwarded_proto}\" vcap_request_id:\"%{DATA:x_vcap_request_id}\" response_time:%{NUMBER:response_time:float}( gorouter_time:%{NUMBER:gorouter_time:float})?( app_time:%{NUMBER:app_time:float})? app_id:\"%{DATA:app_td}\" app_index:\"%{DATA:app_index}\" x_b3_traceid:\"%{DATA:trace_id}\" x_b3_spanid:\"%{DATA:span_id}\" x_b3_parentspanid:\"%{DATA:parent_span_id}\"( b3:\"%{DATA:b3}\")?' }
            add_tag => [ "gorouter" ]
        }
        if [access_timestamp] {
            date {
                id => "parse-gorouter-date"
                match => [ "access_timestamp", "ISO8601" ]
                timezone => "UTC"
                target => "@timestamp"
                remove_field => "access_timestamp"
            }
        }
    }
}