filter {
    if [service] == "bosh-dns" or [service] == "loggr-syslog-agent" or [service] == "audispd" or [service] == "dd-agent" {
        drop { }
    }

    if [metrics] {
        # Aggregate Drain
        grok {
            id => "parse-metrics"
            match => [ "metrics", "\[%{DATA:metrics_type}@%{POSINT:metrics_sd_id} (?<metrics_params_raw>[^\]]+)\]" ]
            remove_field => [ "metrics_sd_id" ]
        }
        kv {
            id => "parse-metrics-kv"
            source => "metrics_params_raw"
            target => "metrics_params"
            remove_field => [ "metrics_params_raw" ]
        }
        mutate {
            rename => { "metrics" => "message" }
            rename => { "syslog_sd_params" => "metrics_tags" }
            rename => { "[metrics_params][name]" => "metrics_name" }
        }
        if [metrics_tags] {
            ruby {
                code => 'event.set("message", event.get("message") + " " + event.get("metrics_tags").to_s)'
            }
        }
        if [metrics_type] == "gauge" {
            mutate {
                rename => { "[metrics_params][value]" => "metrics_value" }
                rename => { "[metrics_params][unit]" => "metrics_unit" }
                convert => [ "metrics_value", "float" ]
            }       
        } else if [metrics_type] == "counter" {
            mutate {
                rename => { "[metrics_params][total]" => "metrics_total" }
                rename => { "[metrics_params][delta]" => "metrics_delta" }
                convert => [ "metrics_total", "integer" ]
                convert => [ "metrics_delta", "integer" ]
            }        
        } else if [metrics_type] == "timer" {
            mutate {
                rename => { "[metrics_params][start]" => "metrics_start" }
                rename => { "[metrics_params][stop]" => "metrics_stop" }
                convert => [ "metrics_start", "integer" ]
                convert => [ "metrics_stop", "integer" ]
            }        
        }
    }    
}
